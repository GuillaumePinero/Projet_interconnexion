# CONSIGNES A LIRE POUR MES CHERS COLLEGUES #
#
# L'architecture est fidèle au schéma qui a été fait lors de notre première réu.
# En reprenant les éléments sur le schéma, les conténaires se ping sur les ports voisins d'un même réseau.
# Un git sera là avec un dossier pour chaque élément afin de faire les configurations et se les partager
# Afin de partager nos avancées, nous ferons un git, chaque élément du réseau aura son dossier

version: "3"

services:

  Ordinateur:
    image: ksator/frr:1.0 # un linux 
    build: 
      context: ./
      dockerfile: Dockerfile
    container_name: Ordinateur # c'est bien de renommer, sinon le nom par défaut est infâme
    networks: 
      reseau_particulier:
        ipv4_address: 192.168.2.195
    command: sleep infinity # sinon il redémarrera

  Serveur_WEB:
    cap_add:
      - CAP_NET_RAW
      - NET_ADMIN
      - SYS_ADMIN
    privileged: false
    image: ksator/frr:1.0
    build: 
      context: ./
      dockerfile: Dockerfile
    container_name: Serveur_WEB
    networks:
      reseau_particulier:
        ipv4_address: 192.168.2.3
    command: sleep infinity # sinon il redémarrera

  Serveur_DNS:
    cap_add:
      - CAP_NET_RAW
      - NET_ADMIN
      - SYS_ADMIN
    privileged: false
    image: ksator/frr:1.0
    build: 
      context: ./
      dockerfile: Dockerfile
    container_name: Serveur_DNS
    networks:
      reseau_particulier:
        ipv4_address: 192.168.2.4
    command: sleep infinity

networks:

  reseau_particulier:
    ipam:
      driver: default
      config:
        - subnet: "192.168.2.0/24"



