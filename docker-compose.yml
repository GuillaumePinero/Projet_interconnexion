# CONSIGNES A LIRE POUR MES CHERS COLLEGUES #
#
# L'architecture est fidèle au schéma qui a été fait lors de notre première réu.
# En reprenant les éléments sur le schéma, les conténaires se ping sur les ports voisins d'un même réseau.
# Un git sera là avec un dossier pour chaque élément afin de faire les configurations et se les partager
# Afin de partager nos avancées, nous ferons un git, chaque élément du réseau aura son dossier

version: "3"

services:

  utilisateur:
    image: alpine # un linux 
    container_name: utilisateur # c'est bien de renommer, sinon le nom par défaut est infâme
    restart: always #sinon ça ferme car il a rien a faire
    depends_on: #
      - box_utilisateur #pour DHCP pour attribuer une adresse par exemple
    networks: 
      reseau_particulier: # par défaut 192.168.2.2
    command: sleep 360 # sinon il redémarrera

  box_utilisateur:
    image: alpine
    build: .
    container_name: box_utilisateur
    restart: always
    ports:
      - "67:67" # DHCP
    #configs:
      #- dhcp_config:
    networks:
      reseau_particulier:
        ipv4_address: 192.168.2.3
      reseau_fai_particulier:
        ipv4_address: 120.0.17.2
    command: sleep 360 # sinon il redémarrera

  fai_utilisateur:
    image: alpine
    container_name: fai_utilisateur
    restart: always #sinon ça ferme car il a rien a faire
    networks:
      reseau_fai_particulier:
        ipv4_address: 120.0.17.3
      #reseau_AS:
        #ipv4_address: 120.0.16.10
    command: sleep 360 # sinon il redémarrera

#configs:
  #dhcp_config:
    #file: "./box_utilisateur/dhcpd.conf"

networks:

  reseau_particulier:
    ipam:
      driver: default
      config:
        - subnet: "192.168.2.0/24"

  reseau_fai_particulier:
    ipam:
      driver: default
      config:
        - subnet: "120.0.17.0/24"

